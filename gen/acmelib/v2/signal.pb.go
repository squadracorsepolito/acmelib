// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: acmelib/v2/signal.proto

package acmelibv2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalKind int32

const (
	SignalKind_SIGNAL_KIND_UNSPECIFIED SignalKind = 0
	SignalKind_SIGNAL_KIND_STANDARD    SignalKind = 1
	SignalKind_SIGNAL_KIND_ENUM        SignalKind = 2
	SignalKind_SIGNAL_KIND_MUXOR       SignalKind = 3
)

// Enum value maps for SignalKind.
var (
	SignalKind_name = map[int32]string{
		0: "SIGNAL_KIND_UNSPECIFIED",
		1: "SIGNAL_KIND_STANDARD",
		2: "SIGNAL_KIND_ENUM",
		3: "SIGNAL_KIND_MUXOR",
	}
	SignalKind_value = map[string]int32{
		"SIGNAL_KIND_UNSPECIFIED": 0,
		"SIGNAL_KIND_STANDARD":    1,
		"SIGNAL_KIND_ENUM":        2,
		"SIGNAL_KIND_MUXOR":       3,
	}
)

func (x SignalKind) Enum() *SignalKind {
	p := new(SignalKind)
	*p = x
	return p
}

func (x SignalKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalKind) Descriptor() protoreflect.EnumDescriptor {
	return file_acmelib_v2_signal_proto_enumTypes[0].Descriptor()
}

func (SignalKind) Type() protoreflect.EnumType {
	return &file_acmelib_v2_signal_proto_enumTypes[0]
}

func (x SignalKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalKind.Descriptor instead.
func (SignalKind) EnumDescriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{0}
}

type Endianness int32

const (
	Endianness_ENDIANNESS_UNSPECIFIED   Endianness = 0
	Endianness_ENDIANNESS_LITTLE_ENDIAN Endianness = 1
	Endianness_ENDIANNESS_BIG_ENDIAN    Endianness = 2
)

// Enum value maps for Endianness.
var (
	Endianness_name = map[int32]string{
		0: "ENDIANNESS_UNSPECIFIED",
		1: "ENDIANNESS_LITTLE_ENDIAN",
		2: "ENDIANNESS_BIG_ENDIAN",
	}
	Endianness_value = map[string]int32{
		"ENDIANNESS_UNSPECIFIED":   0,
		"ENDIANNESS_LITTLE_ENDIAN": 1,
		"ENDIANNESS_BIG_ENDIAN":    2,
	}
)

func (x Endianness) Enum() *Endianness {
	p := new(Endianness)
	*p = x
	return p
}

func (x Endianness) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Endianness) Descriptor() protoreflect.EnumDescriptor {
	return file_acmelib_v2_signal_proto_enumTypes[1].Descriptor()
}

func (Endianness) Type() protoreflect.EnumType {
	return &file_acmelib_v2_signal_proto_enumTypes[1]
}

func (x Endianness) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Endianness.Descriptor instead.
func (Endianness) EnumDescriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{1}
}

type SignalSendType int32

const (
	SignalSendType_SIGNAL_SEND_TYPE_UNSPECIFIED               SignalSendType = 0
	SignalSendType_SIGNAL_SEND_TYPE_CYCLIC                    SignalSendType = 1
	SignalSendType_SIGNAL_SEND_TYPE_ON_WRITE                  SignalSendType = 2
	SignalSendType_SIGNAL_SEND_TYPE_ON_WRITE_WITH_REPETITION  SignalSendType = 3
	SignalSendType_SIGNAL_SEND_TYPE_ON_CHANGE                 SignalSendType = 4
	SignalSendType_SIGNAL_SEND_TYPE_ON_CHANGE_WITH_REPETITION SignalSendType = 5
	SignalSendType_SIGNAL_SEND_TYPE_IF_ACTIVE                 SignalSendType = 6
	SignalSendType_SIGNAL_SEND_TYPE_IF_ACTIVE_WITH_REPETITION SignalSendType = 7
)

// Enum value maps for SignalSendType.
var (
	SignalSendType_name = map[int32]string{
		0: "SIGNAL_SEND_TYPE_UNSPECIFIED",
		1: "SIGNAL_SEND_TYPE_CYCLIC",
		2: "SIGNAL_SEND_TYPE_ON_WRITE",
		3: "SIGNAL_SEND_TYPE_ON_WRITE_WITH_REPETITION",
		4: "SIGNAL_SEND_TYPE_ON_CHANGE",
		5: "SIGNAL_SEND_TYPE_ON_CHANGE_WITH_REPETITION",
		6: "SIGNAL_SEND_TYPE_IF_ACTIVE",
		7: "SIGNAL_SEND_TYPE_IF_ACTIVE_WITH_REPETITION",
	}
	SignalSendType_value = map[string]int32{
		"SIGNAL_SEND_TYPE_UNSPECIFIED":               0,
		"SIGNAL_SEND_TYPE_CYCLIC":                    1,
		"SIGNAL_SEND_TYPE_ON_WRITE":                  2,
		"SIGNAL_SEND_TYPE_ON_WRITE_WITH_REPETITION":  3,
		"SIGNAL_SEND_TYPE_ON_CHANGE":                 4,
		"SIGNAL_SEND_TYPE_ON_CHANGE_WITH_REPETITION": 5,
		"SIGNAL_SEND_TYPE_IF_ACTIVE":                 6,
		"SIGNAL_SEND_TYPE_IF_ACTIVE_WITH_REPETITION": 7,
	}
)

func (x SignalSendType) Enum() *SignalSendType {
	p := new(SignalSendType)
	*p = x
	return p
}

func (x SignalSendType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalSendType) Descriptor() protoreflect.EnumDescriptor {
	return file_acmelib_v2_signal_proto_enumTypes[2].Descriptor()
}

func (SignalSendType) Type() protoreflect.EnumType {
	return &file_acmelib_v2_signal_proto_enumTypes[2]
}

func (x SignalSendType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalSendType.Descriptor instead.
func (SignalSendType) EnumDescriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{2}
}

type SignalTypeKind int32

const (
	SignalTypeKind_SIGNAL_TYPE_KIND_UNSPECIFIED SignalTypeKind = 0
	SignalTypeKind_SIGNAL_TYPE_KIND_FLAG        SignalTypeKind = 1
	SignalTypeKind_SIGNAL_TYPE_KIND_INTEGER     SignalTypeKind = 2
	SignalTypeKind_SIGNAL_TYPE_KIND_DECIMAL     SignalTypeKind = 3
)

// Enum value maps for SignalTypeKind.
var (
	SignalTypeKind_name = map[int32]string{
		0: "SIGNAL_TYPE_KIND_UNSPECIFIED",
		1: "SIGNAL_TYPE_KIND_FLAG",
		2: "SIGNAL_TYPE_KIND_INTEGER",
		3: "SIGNAL_TYPE_KIND_DECIMAL",
	}
	SignalTypeKind_value = map[string]int32{
		"SIGNAL_TYPE_KIND_UNSPECIFIED": 0,
		"SIGNAL_TYPE_KIND_FLAG":        1,
		"SIGNAL_TYPE_KIND_INTEGER":     2,
		"SIGNAL_TYPE_KIND_DECIMAL":     3,
	}
)

func (x SignalTypeKind) Enum() *SignalTypeKind {
	p := new(SignalTypeKind)
	*p = x
	return p
}

func (x SignalTypeKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalTypeKind) Descriptor() protoreflect.EnumDescriptor {
	return file_acmelib_v2_signal_proto_enumTypes[3].Descriptor()
}

func (SignalTypeKind) Type() protoreflect.EnumType {
	return &file_acmelib_v2_signal_proto_enumTypes[3]
}

func (x SignalTypeKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalTypeKind.Descriptor instead.
func (SignalTypeKind) EnumDescriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{3}
}

type SignalUnitKind int32

const (
	SignalUnitKind_SIGNAL_UNIT_KIND_UNSPECIFIED SignalUnitKind = 0
	SignalUnitKind_SIGNAL_UNIT_KIND_CUSTOM      SignalUnitKind = 1
	SignalUnitKind_SIGNAL_UNIT_KIND_TEMPERATURE SignalUnitKind = 2
	SignalUnitKind_SIGNAL_UNIT_KIND_ELECTRICAL  SignalUnitKind = 3
	SignalUnitKind_SIGNAL_UNIT_KIND_POWER       SignalUnitKind = 4
)

// Enum value maps for SignalUnitKind.
var (
	SignalUnitKind_name = map[int32]string{
		0: "SIGNAL_UNIT_KIND_UNSPECIFIED",
		1: "SIGNAL_UNIT_KIND_CUSTOM",
		2: "SIGNAL_UNIT_KIND_TEMPERATURE",
		3: "SIGNAL_UNIT_KIND_ELECTRICAL",
		4: "SIGNAL_UNIT_KIND_POWER",
	}
	SignalUnitKind_value = map[string]int32{
		"SIGNAL_UNIT_KIND_UNSPECIFIED": 0,
		"SIGNAL_UNIT_KIND_CUSTOM":      1,
		"SIGNAL_UNIT_KIND_TEMPERATURE": 2,
		"SIGNAL_UNIT_KIND_ELECTRICAL":  3,
		"SIGNAL_UNIT_KIND_POWER":       4,
	}
)

func (x SignalUnitKind) Enum() *SignalUnitKind {
	p := new(SignalUnitKind)
	*p = x
	return p
}

func (x SignalUnitKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalUnitKind) Descriptor() protoreflect.EnumDescriptor {
	return file_acmelib_v2_signal_proto_enumTypes[4].Descriptor()
}

func (SignalUnitKind) Type() protoreflect.EnumType {
	return &file_acmelib_v2_signal_proto_enumTypes[4]
}

func (x SignalUnitKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalUnitKind.Descriptor instead.
func (SignalUnitKind) EnumDescriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{4}
}

type Signal struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	Entity     *Entity                `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Kind       SignalKind             `protobuf:"varint,2,opt,name=kind,proto3,enum=acmelib.v2.SignalKind" json:"kind,omitempty"`
	StartPos   uint32                 `protobuf:"varint,3,opt,name=start_pos,json=startPos,proto3" json:"start_pos,omitempty"`
	Endianness Endianness             `protobuf:"varint,4,opt,name=endianness,proto3,enum=acmelib.v2.Endianness" json:"endianness,omitempty"`
	SendType   SignalSendType         `protobuf:"varint,5,opt,name=send_type,json=sendType,proto3,enum=acmelib.v2.SignalSendType" json:"send_type,omitempty"`
	StartValue float64                `protobuf:"fixed64,6,opt,name=start_value,json=startValue,proto3" json:"start_value,omitempty"`
	// Types that are valid to be assigned to Signal:
	//
	//	*Signal_Standard
	//	*Signal_Enum
	//	*Signal_Muxor
	Signal               isSignal_Signal        `protobuf_oneof:"signal"`
	AttributeAssignments []*AttributeAssignment `protobuf:"bytes,10,rep,name=attribute_assignments,json=attributeAssignments,proto3" json:"attribute_assignments,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *Signal) Reset() {
	*x = Signal{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{0}
}

func (x *Signal) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *Signal) GetKind() SignalKind {
	if x != nil {
		return x.Kind
	}
	return SignalKind_SIGNAL_KIND_UNSPECIFIED
}

func (x *Signal) GetStartPos() uint32 {
	if x != nil {
		return x.StartPos
	}
	return 0
}

func (x *Signal) GetEndianness() Endianness {
	if x != nil {
		return x.Endianness
	}
	return Endianness_ENDIANNESS_UNSPECIFIED
}

func (x *Signal) GetSendType() SignalSendType {
	if x != nil {
		return x.SendType
	}
	return SignalSendType_SIGNAL_SEND_TYPE_UNSPECIFIED
}

func (x *Signal) GetStartValue() float64 {
	if x != nil {
		return x.StartValue
	}
	return 0
}

func (x *Signal) GetSignal() isSignal_Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Signal) GetStandard() *StandardSignal {
	if x != nil {
		if x, ok := x.Signal.(*Signal_Standard); ok {
			return x.Standard
		}
	}
	return nil
}

func (x *Signal) GetEnum() *EnumSignal {
	if x != nil {
		if x, ok := x.Signal.(*Signal_Enum); ok {
			return x.Enum
		}
	}
	return nil
}

func (x *Signal) GetMuxor() *MuxorSignal {
	if x != nil {
		if x, ok := x.Signal.(*Signal_Muxor); ok {
			return x.Muxor
		}
	}
	return nil
}

func (x *Signal) GetAttributeAssignments() []*AttributeAssignment {
	if x != nil {
		return x.AttributeAssignments
	}
	return nil
}

type isSignal_Signal interface {
	isSignal_Signal()
}

type Signal_Standard struct {
	Standard *StandardSignal `protobuf:"bytes,7,opt,name=standard,proto3,oneof"`
}

type Signal_Enum struct {
	Enum *EnumSignal `protobuf:"bytes,8,opt,name=enum,proto3,oneof"`
}

type Signal_Muxor struct {
	Muxor *MuxorSignal `protobuf:"bytes,9,opt,name=muxor,proto3,oneof"`
}

func (*Signal_Standard) isSignal_Signal() {}

func (*Signal_Enum) isSignal_Signal() {}

func (*Signal_Muxor) isSignal_Signal() {}

type StandardSignal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TypeEntityId  string                 `protobuf:"bytes,1,opt,name=type_entity_id,json=typeEntityId,proto3" json:"type_entity_id,omitempty"`
	UnitEntityId  string                 `protobuf:"bytes,2,opt,name=unit_entity_id,json=unitEntityId,proto3" json:"unit_entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StandardSignal) Reset() {
	*x = StandardSignal{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StandardSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StandardSignal) ProtoMessage() {}

func (x *StandardSignal) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StandardSignal.ProtoReflect.Descriptor instead.
func (*StandardSignal) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{1}
}

func (x *StandardSignal) GetTypeEntityId() string {
	if x != nil {
		return x.TypeEntityId
	}
	return ""
}

func (x *StandardSignal) GetUnitEntityId() string {
	if x != nil {
		return x.UnitEntityId
	}
	return ""
}

type EnumSignal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EnumEntityId  string                 `protobuf:"bytes,1,opt,name=enum_entity_id,json=enumEntityId,proto3" json:"enum_entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnumSignal) Reset() {
	*x = EnumSignal{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnumSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumSignal) ProtoMessage() {}

func (x *EnumSignal) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumSignal.ProtoReflect.Descriptor instead.
func (*EnumSignal) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{2}
}

func (x *EnumSignal) GetEnumEntityId() string {
	if x != nil {
		return x.EnumEntityId
	}
	return ""
}

type MuxorSignal struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LayoutCount   uint32                 `protobuf:"varint,1,opt,name=layout_count,json=layoutCount,proto3" json:"layout_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MuxorSignal) Reset() {
	*x = MuxorSignal{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MuxorSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuxorSignal) ProtoMessage() {}

func (x *MuxorSignal) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuxorSignal.ProtoReflect.Descriptor instead.
func (*MuxorSignal) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{3}
}

func (x *MuxorSignal) GetLayoutCount() uint32 {
	if x != nil {
		return x.LayoutCount
	}
	return 0
}

type SignalType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        *Entity                `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Kind          SignalTypeKind         `protobuf:"varint,2,opt,name=kind,proto3,enum=acmelib.v2.SignalTypeKind" json:"kind,omitempty"`
	Size          uint32                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Signed        bool                   `protobuf:"varint,4,opt,name=signed,proto3" json:"signed,omitempty"`
	Min           float64                `protobuf:"fixed64,5,opt,name=min,proto3" json:"min,omitempty"`
	Max           float64                `protobuf:"fixed64,6,opt,name=max,proto3" json:"max,omitempty"`
	Scale         float64                `protobuf:"fixed64,7,opt,name=scale,proto3" json:"scale,omitempty"`
	Offset        float64                `protobuf:"fixed64,8,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalType) Reset() {
	*x = SignalType{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalType) ProtoMessage() {}

func (x *SignalType) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalType.ProtoReflect.Descriptor instead.
func (*SignalType) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{4}
}

func (x *SignalType) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SignalType) GetKind() SignalTypeKind {
	if x != nil {
		return x.Kind
	}
	return SignalTypeKind_SIGNAL_TYPE_KIND_UNSPECIFIED
}

func (x *SignalType) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SignalType) GetSigned() bool {
	if x != nil {
		return x.Signed
	}
	return false
}

func (x *SignalType) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SignalType) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *SignalType) GetScale() float64 {
	if x != nil {
		return x.Scale
	}
	return 0
}

func (x *SignalType) GetOffset() float64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SignalUnit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        *Entity                `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Kind          SignalUnitKind         `protobuf:"varint,2,opt,name=kind,proto3,enum=acmelib.v2.SignalUnitKind" json:"kind,omitempty"`
	Symbol        string                 `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalUnit) Reset() {
	*x = SignalUnit{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalUnit) ProtoMessage() {}

func (x *SignalUnit) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalUnit.ProtoReflect.Descriptor instead.
func (*SignalUnit) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{5}
}

func (x *SignalUnit) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SignalUnit) GetKind() SignalUnitKind {
	if x != nil {
		return x.Kind
	}
	return SignalUnitKind_SIGNAL_UNIT_KIND_UNSPECIFIED
}

func (x *SignalUnit) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

type SignalEnum struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        *Entity                `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Size          uint32                 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	FixedSize     bool                   `protobuf:"varint,3,opt,name=fixed_size,json=fixedSize,proto3" json:"fixed_size,omitempty"`
	Values        []*SignalEnumValue     `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalEnum) Reset() {
	*x = SignalEnum{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEnum) ProtoMessage() {}

func (x *SignalEnum) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEnum.ProtoReflect.Descriptor instead.
func (*SignalEnum) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{6}
}

func (x *SignalEnum) GetEntity() *Entity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SignalEnum) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SignalEnum) GetFixedSize() bool {
	if x != nil {
		return x.FixedSize
	}
	return false
}

func (x *SignalEnum) GetValues() []*SignalEnumValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type SignalEnumValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Index         uint32                 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc          string                 `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalEnumValue) Reset() {
	*x = SignalEnumValue{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalEnumValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalEnumValue) ProtoMessage() {}

func (x *SignalEnumValue) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalEnumValue.ProtoReflect.Descriptor instead.
func (*SignalEnumValue) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{7}
}

func (x *SignalEnumValue) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SignalEnumValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SignalEnumValue) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type SignalLayout struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SizeByte          uint32                 `protobuf:"varint,2,opt,name=size_byte,json=sizeByte,proto3" json:"size_byte,omitempty"`
	Signals           []*Signal              `protobuf:"bytes,3,rep,name=signals,proto3" json:"signals,omitempty"`
	MultiplexedLayers []*MultiplexedLayer    `protobuf:"bytes,4,rep,name=multiplexed_layers,json=multiplexedLayers,proto3" json:"multiplexed_layers,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SignalLayout) Reset() {
	*x = SignalLayout{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalLayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalLayout) ProtoMessage() {}

func (x *SignalLayout) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalLayout.ProtoReflect.Descriptor instead.
func (*SignalLayout) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{8}
}

func (x *SignalLayout) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SignalLayout) GetSizeByte() uint32 {
	if x != nil {
		return x.SizeByte
	}
	return 0
}

func (x *SignalLayout) GetSignals() []*Signal {
	if x != nil {
		return x.Signals
	}
	return nil
}

func (x *SignalLayout) GetMultiplexedLayers() []*MultiplexedLayer {
	if x != nil {
		return x.MultiplexedLayers
	}
	return nil
}

type MultiplexedLayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Muxor         *Signal                `protobuf:"bytes,1,opt,name=muxor,proto3" json:"muxor,omitempty"`
	Layouts       []*SignalLayout        `protobuf:"bytes,2,rep,name=layouts,proto3" json:"layouts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultiplexedLayer) Reset() {
	*x = MultiplexedLayer{}
	mi := &file_acmelib_v2_signal_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultiplexedLayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiplexedLayer) ProtoMessage() {}

func (x *MultiplexedLayer) ProtoReflect() protoreflect.Message {
	mi := &file_acmelib_v2_signal_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiplexedLayer.ProtoReflect.Descriptor instead.
func (*MultiplexedLayer) Descriptor() ([]byte, []int) {
	return file_acmelib_v2_signal_proto_rawDescGZIP(), []int{9}
}

func (x *MultiplexedLayer) GetMuxor() *Signal {
	if x != nil {
		return x.Muxor
	}
	return nil
}

func (x *MultiplexedLayer) GetLayouts() []*SignalLayout {
	if x != nil {
		return x.Layouts
	}
	return nil
}

var File_acmelib_v2_signal_proto protoreflect.FileDescriptor

const file_acmelib_v2_signal_proto_rawDesc = "" +
	"\n" +
	"\x17acmelib/v2/signal.proto\x12\n" +
	"acmelib.v2\x1a\x17acmelib/v2/entity.proto\x1a\x1aacmelib/v2/attribute.proto\"\x88\x04\n" +
	"\x06Signal\x12*\n" +
	"\x06entity\x18\x01 \x01(\v2\x12.acmelib.v2.EntityR\x06entity\x12*\n" +
	"\x04kind\x18\x02 \x01(\x0e2\x16.acmelib.v2.SignalKindR\x04kind\x12\x1b\n" +
	"\tstart_pos\x18\x03 \x01(\rR\bstartPos\x126\n" +
	"\n" +
	"endianness\x18\x04 \x01(\x0e2\x16.acmelib.v2.EndiannessR\n" +
	"endianness\x127\n" +
	"\tsend_type\x18\x05 \x01(\x0e2\x1a.acmelib.v2.SignalSendTypeR\bsendType\x12\x1f\n" +
	"\vstart_value\x18\x06 \x01(\x01R\n" +
	"startValue\x128\n" +
	"\bstandard\x18\a \x01(\v2\x1a.acmelib.v2.StandardSignalH\x00R\bstandard\x12,\n" +
	"\x04enum\x18\b \x01(\v2\x16.acmelib.v2.EnumSignalH\x00R\x04enum\x12/\n" +
	"\x05muxor\x18\t \x01(\v2\x17.acmelib.v2.MuxorSignalH\x00R\x05muxor\x12T\n" +
	"\x15attribute_assignments\x18\n" +
	" \x03(\v2\x1f.acmelib.v2.AttributeAssignmentR\x14attributeAssignmentsB\b\n" +
	"\x06signal\"\\\n" +
	"\x0eStandardSignal\x12$\n" +
	"\x0etype_entity_id\x18\x01 \x01(\tR\ftypeEntityId\x12$\n" +
	"\x0eunit_entity_id\x18\x02 \x01(\tR\funitEntityId\"2\n" +
	"\n" +
	"EnumSignal\x12$\n" +
	"\x0eenum_entity_id\x18\x01 \x01(\tR\fenumEntityId\"0\n" +
	"\vMuxorSignal\x12!\n" +
	"\flayout_count\x18\x01 \x01(\rR\vlayoutCount\"\xe6\x01\n" +
	"\n" +
	"SignalType\x12*\n" +
	"\x06entity\x18\x01 \x01(\v2\x12.acmelib.v2.EntityR\x06entity\x12.\n" +
	"\x04kind\x18\x02 \x01(\x0e2\x1a.acmelib.v2.SignalTypeKindR\x04kind\x12\x12\n" +
	"\x04size\x18\x03 \x01(\rR\x04size\x12\x16\n" +
	"\x06signed\x18\x04 \x01(\bR\x06signed\x12\x10\n" +
	"\x03min\x18\x05 \x01(\x01R\x03min\x12\x10\n" +
	"\x03max\x18\x06 \x01(\x01R\x03max\x12\x14\n" +
	"\x05scale\x18\a \x01(\x01R\x05scale\x12\x16\n" +
	"\x06offset\x18\b \x01(\x01R\x06offset\"\x80\x01\n" +
	"\n" +
	"SignalUnit\x12*\n" +
	"\x06entity\x18\x01 \x01(\v2\x12.acmelib.v2.EntityR\x06entity\x12.\n" +
	"\x04kind\x18\x02 \x01(\x0e2\x1a.acmelib.v2.SignalUnitKindR\x04kind\x12\x16\n" +
	"\x06symbol\x18\x03 \x01(\tR\x06symbol\"\xa0\x01\n" +
	"\n" +
	"SignalEnum\x12*\n" +
	"\x06entity\x18\x01 \x01(\v2\x12.acmelib.v2.EntityR\x06entity\x12\x12\n" +
	"\x04size\x18\x02 \x01(\rR\x04size\x12\x1d\n" +
	"\n" +
	"fixed_size\x18\x03 \x01(\bR\tfixedSize\x123\n" +
	"\x06values\x18\x04 \x03(\v2\x1b.acmelib.v2.SignalEnumValueR\x06values\"O\n" +
	"\x0fSignalEnumValue\x12\x14\n" +
	"\x05index\x18\x01 \x01(\rR\x05index\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04desc\x18\x03 \x01(\tR\x04desc\"\xb6\x01\n" +
	"\fSignalLayout\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\tsize_byte\x18\x02 \x01(\rR\bsizeByte\x12,\n" +
	"\asignals\x18\x03 \x03(\v2\x12.acmelib.v2.SignalR\asignals\x12K\n" +
	"\x12multiplexed_layers\x18\x04 \x03(\v2\x1c.acmelib.v2.MultiplexedLayerR\x11multiplexedLayers\"p\n" +
	"\x10MultiplexedLayer\x12(\n" +
	"\x05muxor\x18\x01 \x01(\v2\x12.acmelib.v2.SignalR\x05muxor\x122\n" +
	"\alayouts\x18\x02 \x03(\v2\x18.acmelib.v2.SignalLayoutR\alayouts*p\n" +
	"\n" +
	"SignalKind\x12\x1b\n" +
	"\x17SIGNAL_KIND_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14SIGNAL_KIND_STANDARD\x10\x01\x12\x14\n" +
	"\x10SIGNAL_KIND_ENUM\x10\x02\x12\x15\n" +
	"\x11SIGNAL_KIND_MUXOR\x10\x03*a\n" +
	"\n" +
	"Endianness\x12\x1a\n" +
	"\x16ENDIANNESS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18ENDIANNESS_LITTLE_ENDIAN\x10\x01\x12\x19\n" +
	"\x15ENDIANNESS_BIG_ENDIAN\x10\x02*\xbd\x02\n" +
	"\x0eSignalSendType\x12 \n" +
	"\x1cSIGNAL_SEND_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17SIGNAL_SEND_TYPE_CYCLIC\x10\x01\x12\x1d\n" +
	"\x19SIGNAL_SEND_TYPE_ON_WRITE\x10\x02\x12-\n" +
	")SIGNAL_SEND_TYPE_ON_WRITE_WITH_REPETITION\x10\x03\x12\x1e\n" +
	"\x1aSIGNAL_SEND_TYPE_ON_CHANGE\x10\x04\x12.\n" +
	"*SIGNAL_SEND_TYPE_ON_CHANGE_WITH_REPETITION\x10\x05\x12\x1e\n" +
	"\x1aSIGNAL_SEND_TYPE_IF_ACTIVE\x10\x06\x12.\n" +
	"*SIGNAL_SEND_TYPE_IF_ACTIVE_WITH_REPETITION\x10\a*\x89\x01\n" +
	"\x0eSignalTypeKind\x12 \n" +
	"\x1cSIGNAL_TYPE_KIND_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SIGNAL_TYPE_KIND_FLAG\x10\x01\x12\x1c\n" +
	"\x18SIGNAL_TYPE_KIND_INTEGER\x10\x02\x12\x1c\n" +
	"\x18SIGNAL_TYPE_KIND_DECIMAL\x10\x03*\xae\x01\n" +
	"\x0eSignalUnitKind\x12 \n" +
	"\x1cSIGNAL_UNIT_KIND_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17SIGNAL_UNIT_KIND_CUSTOM\x10\x01\x12 \n" +
	"\x1cSIGNAL_UNIT_KIND_TEMPERATURE\x10\x02\x12\x1f\n" +
	"\x1bSIGNAL_UNIT_KIND_ELECTRICAL\x10\x03\x12\x1a\n" +
	"\x16SIGNAL_UNIT_KIND_POWER\x10\x04B|\n" +
	"\x0ecom.acmelib.v2B\vSignalProtoP\x01Z\x14acmelib/v2;acmelibv2\xa2\x02\x03AXX\xaa\x02\n" +
	"Acmelib.V2\xca\x02\n" +
	"Acmelib\\V2\xe2\x02\x16Acmelib\\V2\\GPBMetadata\xea\x02\vAcmelib::V2b\x06proto3"

var (
	file_acmelib_v2_signal_proto_rawDescOnce sync.Once
	file_acmelib_v2_signal_proto_rawDescData []byte
)

func file_acmelib_v2_signal_proto_rawDescGZIP() []byte {
	file_acmelib_v2_signal_proto_rawDescOnce.Do(func() {
		file_acmelib_v2_signal_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_acmelib_v2_signal_proto_rawDesc), len(file_acmelib_v2_signal_proto_rawDesc)))
	})
	return file_acmelib_v2_signal_proto_rawDescData
}

var file_acmelib_v2_signal_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_acmelib_v2_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_acmelib_v2_signal_proto_goTypes = []any{
	(SignalKind)(0),             // 0: acmelib.v2.SignalKind
	(Endianness)(0),             // 1: acmelib.v2.Endianness
	(SignalSendType)(0),         // 2: acmelib.v2.SignalSendType
	(SignalTypeKind)(0),         // 3: acmelib.v2.SignalTypeKind
	(SignalUnitKind)(0),         // 4: acmelib.v2.SignalUnitKind
	(*Signal)(nil),              // 5: acmelib.v2.Signal
	(*StandardSignal)(nil),      // 6: acmelib.v2.StandardSignal
	(*EnumSignal)(nil),          // 7: acmelib.v2.EnumSignal
	(*MuxorSignal)(nil),         // 8: acmelib.v2.MuxorSignal
	(*SignalType)(nil),          // 9: acmelib.v2.SignalType
	(*SignalUnit)(nil),          // 10: acmelib.v2.SignalUnit
	(*SignalEnum)(nil),          // 11: acmelib.v2.SignalEnum
	(*SignalEnumValue)(nil),     // 12: acmelib.v2.SignalEnumValue
	(*SignalLayout)(nil),        // 13: acmelib.v2.SignalLayout
	(*MultiplexedLayer)(nil),    // 14: acmelib.v2.MultiplexedLayer
	(*Entity)(nil),              // 15: acmelib.v2.Entity
	(*AttributeAssignment)(nil), // 16: acmelib.v2.AttributeAssignment
}
var file_acmelib_v2_signal_proto_depIdxs = []int32{
	15, // 0: acmelib.v2.Signal.entity:type_name -> acmelib.v2.Entity
	0,  // 1: acmelib.v2.Signal.kind:type_name -> acmelib.v2.SignalKind
	1,  // 2: acmelib.v2.Signal.endianness:type_name -> acmelib.v2.Endianness
	2,  // 3: acmelib.v2.Signal.send_type:type_name -> acmelib.v2.SignalSendType
	6,  // 4: acmelib.v2.Signal.standard:type_name -> acmelib.v2.StandardSignal
	7,  // 5: acmelib.v2.Signal.enum:type_name -> acmelib.v2.EnumSignal
	8,  // 6: acmelib.v2.Signal.muxor:type_name -> acmelib.v2.MuxorSignal
	16, // 7: acmelib.v2.Signal.attribute_assignments:type_name -> acmelib.v2.AttributeAssignment
	15, // 8: acmelib.v2.SignalType.entity:type_name -> acmelib.v2.Entity
	3,  // 9: acmelib.v2.SignalType.kind:type_name -> acmelib.v2.SignalTypeKind
	15, // 10: acmelib.v2.SignalUnit.entity:type_name -> acmelib.v2.Entity
	4,  // 11: acmelib.v2.SignalUnit.kind:type_name -> acmelib.v2.SignalUnitKind
	15, // 12: acmelib.v2.SignalEnum.entity:type_name -> acmelib.v2.Entity
	12, // 13: acmelib.v2.SignalEnum.values:type_name -> acmelib.v2.SignalEnumValue
	5,  // 14: acmelib.v2.SignalLayout.signals:type_name -> acmelib.v2.Signal
	14, // 15: acmelib.v2.SignalLayout.multiplexed_layers:type_name -> acmelib.v2.MultiplexedLayer
	5,  // 16: acmelib.v2.MultiplexedLayer.muxor:type_name -> acmelib.v2.Signal
	13, // 17: acmelib.v2.MultiplexedLayer.layouts:type_name -> acmelib.v2.SignalLayout
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_acmelib_v2_signal_proto_init() }
func file_acmelib_v2_signal_proto_init() {
	if File_acmelib_v2_signal_proto != nil {
		return
	}
	file_acmelib_v2_entity_proto_init()
	file_acmelib_v2_attribute_proto_init()
	file_acmelib_v2_signal_proto_msgTypes[0].OneofWrappers = []any{
		(*Signal_Standard)(nil),
		(*Signal_Enum)(nil),
		(*Signal_Muxor)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_acmelib_v2_signal_proto_rawDesc), len(file_acmelib_v2_signal_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_acmelib_v2_signal_proto_goTypes,
		DependencyIndexes: file_acmelib_v2_signal_proto_depIdxs,
		EnumInfos:         file_acmelib_v2_signal_proto_enumTypes,
		MessageInfos:      file_acmelib_v2_signal_proto_msgTypes,
	}.Build()
	File_acmelib_v2_signal_proto = out.File
	file_acmelib_v2_signal_proto_goTypes = nil
	file_acmelib_v2_signal_proto_depIdxs = nil
}
