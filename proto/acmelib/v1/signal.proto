syntax = "proto3";

package acmelib.v1;

import "acmelib/v1/entity.proto";
import "acmelib/v1/attribute.proto";

enum SignalKind {
    SIGNAL_KIND_UNSPECIFIED = 0;
    SIGNAL_KIND_STANDARD = 1;
    SIGNAL_KIND_ENUM = 2;
    SIGNAL_KIND_MULTIPLEXER = 3;
}

enum SignalSendType {
    SIGNAL_SEND_TYPE_UNSPECIFIED = 0;
    SIGNAL_SEND_TYPE_CYCLIC = 1;
    SIGNAL_SEND_TYPE_ON_WRITE = 2;
    SIGNAL_SEND_TYPE_ON_WRITE_WITH_REPETITION = 3;
    SIGNAL_SEND_TYPE_ON_CHANGE = 4;
    SIGNAL_SEND_TYPE_ON_CHANGE_WITH_REPETITION = 5;
    SIGNAL_SEND_TYPE_IF_ACTIVE = 6;
    SIGNAL_SEND_TYPE_IF_ACTIVE_WITH_REPETITION = 7;
}

message Signal {
    acmelib.v1.Entity entity = 1;

    SignalKind kind = 2;
    SignalSendType send_type = 3;
    double start_value = 4;

    oneof signal {
        StandardSignal standard = 5;
        EnumSignal enum = 6;
        MultiplexerSignal multiplexer = 7;
    }
    
    repeated acmelib.v1.AttributeAssignment attribute_assignments = 8;
}

message StandardSignal {
    string type_entity_id = 1;
    string unit_entity_id = 2;
}

message EnumSignal {
    string enum_entity_id = 1;
}

message MultiplexerSignal {
    repeated Signal signals = 1;
    repeated string fixed_signal_entity_ids = 2;

    uint32 group_count = 3;
    uint32 group_size = 4;

    repeated acmelib.v1.SignalPayload groups = 5;
}

message SignalEnum {
    acmelib.v1.Entity entity = 1;

    repeated SignalEnumValue values = 2;
    uint32 min_size = 3;
}

message SignalEnumValue {
    acmelib.v1.Entity entity = 1;

    uint32 index = 2;
}

enum SignalTypeKind {
    SIGNAL_TYPE_KIND_UNSPECIFIED = 0;
    SIGNAL_TYPE_KIND_CUSTOM = 1;
    SIGNAL_TYPE_KIND_FLAG = 2;
    SIGNAL_TYPE_KIND_INTEGER = 3;
    SIGNAL_TYPE_KIND_DECIMAL = 4;
}

message SignalType {
    acmelib.v1.Entity entity = 1;

    SignalTypeKind kind = 2;
    uint32 size = 3;
    bool signed = 4;
    double min = 5;
    double max = 6;
    double scale = 7;
    double offset = 8;
}

enum SignalUnitKind {
    SIGNAL_UNIT_KIND_UNSPECIFIED = 0;
    SIGNAL_UNIT_KIND_CUSTOM = 1;
    SIGNAL_UNIT_KIND_TEMPERATURE = 2;
    SIGNAL_UNIT_KIND_ELECTRICAL = 3;
    SIGNAL_UNIT_KIND_POWER = 4;
}

message SignalUnit {
    acmelib.v1.Entity entity = 1;

    SignalUnitKind kind = 2;
    string symbol = 3;
}

message SignalPayloadRef {
    string signal_entity_id = 1;
    uint32 rel_start_bit = 2;
}

message SignalPayload {
    repeated SignalPayloadRef refs = 1;
}